main_import_code: |-
    from base_trainable import BaseTrainable

ray_paradigm: "run"

run_or_experiment: "BaseTrainable"

resources_per_trial:
    cpu: 1
    gpu: 0
stop:
    is_num_iterations_reached: 1
checkpoint_freq: 0
checkpoint_at_end: False

config:
    version: 1.6

    device: "torch.device('cpu')"

    seed: 1482555873

    num_iterations: 1

    sign:
        grid_search:
            - 1.0
            - -1.0

    Layer1_kwargs:
        w_1:
            grid_search:
                - 0.0
                - 0.1
                - 0.2
                - 0.3
                - 0.4
                - 0.5
                - 0.6
                - 0.7
                - 0.8
                - 0.9
                - 1.0
                - 1.1
                - 1.2
                - 1.3
                - 1.4
                - 1.5
                - 1.6
                - 1.7
                - 1.8
                - 1.9
                - 2.0
    Layer2_kwargs:
        w_1: 1.0
        w_2: 2.0

    train__loss:
        grid_search:
            - 0.0
            - 0.2
            - 0.4
            - 0.6
            - 0.8
            - 1.0

    step_code: |-
        tmp = self.config['train__loss']-(
            self.config['Layer1_kwargs']['w_1']*self.config['Layer2_kwargs']['w_1']-1.0
        )**2*0.5

        if tmp>0:
            result_dict['w_2'] = ((tmp*2.0)**0.5*self.config['sign']+1.0)/self.config['Layer2_kwargs']['w_2']
        else:
            raise ValueError
